name: Release

on:
  pull_request:
    types: [closed, labeled, unlabeled]

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    needs: update_release_draft
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - name: Tag next version
        id: tag-action
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: master
          release_strategy: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Release Draft
        uses: actions/github-script@v6.4.1
        if: (steps.tag-action.outputs.tag != '')
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const tag = "${{ steps.tag-action.outputs.tag }}";
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const draftRelease = releases.find(release => release.tag_name === tag && release.draft === true);

            if (!draftRelease) {
              console.log(`No draft release found for tag ${tag}`);
              return;
            }

            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: draftRelease.id,
              draft: false
            });

            console.log(`Published draft release for tag ${tag}`);
